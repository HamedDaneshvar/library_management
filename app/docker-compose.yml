version: '3.7'

services:
  backend:
    image: backend-img
    build:
      context: .
      dockerfile: backend.dockerfile
    restart: always
    env_file:
      - ./.env
    ports:
      - "8091:80"
    volumes:
      - .:/app/
    depends_on:
      - redis
      - db

  db:
    image: postgres:14
    restart: always
    volumes:
      - ./data:/var/lib/postgresql/data/pgdata
    env_file:
      - ./.env
    ports:
      - 5433:5432
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata

  redis:
    image: redis:7.0.6
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - 6379:6379

  rabbitmq:
    image: rabbitmq:latest
    env_file:
      - ./.env
    ports:
      - 5672:5672

  celery:
    build:
      context: .
      dockerfile: ./celery.dockerfile
    container_name: library_management_celery
    command: celery -A app.core.celery_app worker -E -l info
    env_file:
      - ./.env
    volumes:
      - .:/app
    depends_on:
      - db
      - rabbitmq

  celery_beat:
    build:
      context: .
      dockerfile: ./celery.dockerfile
    container_name: library_management_celery_beat
    command: celery -A app.core.celery_app beat -l info
    env_file:
      - ./.env
    volumes:
      - .:/app
    depends_on:
      - db
      - rabbitmq
